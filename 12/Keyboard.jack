// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;  //Nothing to initialize
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);  //Keyboard location
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {

        var char c1;  //First key pressed
        var char c2;  //Second key pressed

        do Output.printChar(0); // displayCursor;

        while ((c2=0) | (c1>0)) {
            let c1 = Keyboard.keyPressed();  //c = code of key
            if (c1>0) {
                let c2=c1;
            }
        }

        do Output.printChar(String.backSpace());  //Need to backspace to print correct character
        do Output.printChar(c2);  //Advance cursor

        return c2;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {

        var char inpChar;
        var char nlChar;
        var char backChar;

        var char retStr;
        var boolean exitCond;

        let retStr = String.new(80);
        do Output.printString(message);

        let nlChar = String.newLine();  //gets char 128, newline character
        let backChar = String.backSpace();  //Gets backspace char

        while (~exitCond) {
            let inpChar = Keyboard.readChar();
            let exitCond = (inpChar=nlChar);
            if (~exitCond) {
                if (inpChar=backChar) {
                    do String.eraseLastChar(retStr);
                }
                else {
                    let retStr = String.appendChar(retStr, inpChar);
                }
            }
        }

        return retStr;
    }


    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
        var String inp;
        var int conv;

        let inp = Keyboard.readLine(message);
        let conv = String.intValue(inp);

        do String.dispose(inp);

        return conv;
    }
}
