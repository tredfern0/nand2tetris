// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=incot, out=inced);

    Not(in=reset, out=notReset, out=notReset2);
    Not(in=load, out=notLoad, out=notLoad2);
    Not(in=inc, out=notInc, out=notInc2);

    And(a=notReset, b=notLoad, out=notA);
    And(a=notA, b=notInc, out=loadOr);
    Not(in=loadOr,out=loadF);

    Not(in=notReset2, out=reset2);
    Not(in=notLoad2, out=load2);
    Not(in=notInc2, out=inc2);

    Mux16(a=plainot, b=inced, sel=inc2, out=otInc);

    Mux16(a=otInc, b=in, sel=load2, out=otLoad);

    Mux16(a=otLoad, b[0..15]=false, sel=reset2, out=otFinal);

    Register(in=otFinal, load=loadF, out=out, out=incot, out=plainot);

}
