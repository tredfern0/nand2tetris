function RNG.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 1
pop this 0
push argument 0
pop this 1
push pointer 0
return
function RNG.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function RNG.rand 3
push argument 0
pop pointer 0
push this 0
push this 1
add
pop local 1
push local 1
push constant 7
call Math.divide 2
pop local 2
push local 1
push local 2
push constant 7
call Math.multiply 2
sub
pop local 0
push this 0
push constant 5000
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 0
goto IF_END0
label IF_FALSE0
push this 0
push constant 3
call Math.multiply 2
pop this 0
label IF_END0
push this 1
push constant 1000
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 1
goto IF_END1
label IF_FALSE1
push this 1
push constant 2
add
pop this 1
label IF_END1
push local 0
return
